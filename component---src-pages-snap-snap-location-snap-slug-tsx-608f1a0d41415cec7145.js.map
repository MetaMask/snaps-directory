{"version":3,"file":"component---src-pages-snap-snap-location-snap-slug-tsx-608f1a0d41415cec7145.js","mappings":"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","sources":["webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs","webpack://@metamask/snaps-directory/./src/pages/snap/{Snap.location}/{Snap.slug}.tsx"],"sourcesContent":["'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map","import {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Flex,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { t, Trans } from '@lingui/macro';\nimport { graphql } from 'gatsby';\nimport type { FunctionComponent } from 'react';\n\nimport type { RegistrySnapCategory } from '../../../components';\nimport {\n  SnapAuthorship,\n  Icon,\n  SnapData,\n  InstallSnapButton,\n  SnapSourceCode,\n  SnapAudits,\n  SnapCategory,\n  BackButton,\n} from '../../../components';\nimport { ExternalLink } from '../../../components/ExternalLink';\nimport type { Fields } from '../../../utils';\n\ntype SnapPageProps = {\n  data: {\n    snap: Fields<\n      Queries.Snap,\n      | 'name'\n      | 'icon'\n      | 'snapId'\n      | 'description'\n      | 'latestVersion'\n      | 'website'\n      | 'category'\n      | 'author'\n      | 'sourceCode'\n      | 'audits'\n      | 'banner'\n      | 'support'\n    >;\n  };\n};\n\nconst SnapPage: FunctionComponent<SnapPageProps> = ({ data }) => {\n  const { name, snapId, icon, description, latestVersion } = data.snap;\n\n  return (\n    <Container\n      maxWidth=\"container.xl\"\n      paddingTop=\"0\"\n      marginTop={{ base: 4, md: 20 }}\n    >\n      <BackButton />\n      <Box p=\"6\" rounded=\"2xl\" boxShadow=\"base\" background=\"white\">\n        <Flex\n          justifyContent=\"space-between\"\n          flexDirection={{ base: 'column', md: 'row' }}\n          alignItems=\"center\"\n        >\n          <SnapAuthorship name={name} icon={icon} snapId={snapId} />\n          <Flex\n            alignItems=\"center\"\n            flexDirection={{ base: 'column', md: 'row' }}\n            marginTop={{ base: 4, md: 0 }}\n            width={{ base: '100%', md: 'auto' }}\n          >\n            {data.snap.website && (\n              <Button\n                variant=\"outline\"\n                leftIcon={<Icon icon=\"externalLink\" />}\n                width={{ base: '100%', md: 'auto' }}\n                marginBottom={{ base: 2, md: 0 }}\n                marginRight={{ base: 0, md: 4 }}\n              >\n                <Link\n                  href={data.snap.website}\n                  isExternal={true}\n                  _hover={{ textDecoration: 'none' }}\n                >\n                  <Trans>Website</Trans>\n                </Link>\n              </Button>\n            )}\n            <InstallSnapButton\n              snapId={snapId}\n              name={name}\n              icon={icon}\n              version={latestVersion}\n            />\n          </Flex>\n        </Flex>\n        <Divider my=\"6\" />\n        <Flex\n          justifyContent={{ base: 'center', md: 'space-between' }}\n          flexDirection={{ base: 'column', md: 'row' }}\n          rowGap={{ base: 4, md: 0 }}\n        >\n          {data.snap.category && (\n            <SnapData\n              label={t`Category`}\n              value={\n                <SnapCategory\n                  category={data.snap.category as RegistrySnapCategory}\n                />\n              }\n            />\n          )}\n          <SnapData label={t`Version`} value={latestVersion} />\n          {data.snap.author && (\n            <SnapData\n              label={t`Developer`}\n              value={\n                <ExternalLink href={data.snap.author.website as string}>\n                  {data.snap.author.name}\n                </ExternalLink>\n              }\n            />\n          )}\n          {data.snap.sourceCode && (\n            <SnapData\n              label={t`Source Code`}\n              value={<SnapSourceCode url={data.snap.sourceCode} />}\n            />\n          )}\n          {data.snap.audits && (\n            <SnapData\n              label={t`Audit`}\n              value={\n                <SnapAudits\n                  audits={\n                    data.snap.audits as Fields<\n                      Queries.SnapAudits,\n                      'auditor' | 'report'\n                    >[]\n                  }\n                />\n              }\n            />\n          )}\n          {(data.snap.support?.contact ||\n            data.snap.support?.faq ||\n            data.snap.support?.knowledgeBase) && (\n            <SnapData\n              label={t`Support`}\n              value={\n                <>\n                  {data.snap.support.contact && (\n                    <ExternalLink href={data.snap.support.contact}>\n                      <Trans>Contact</Trans>\n                    </ExternalLink>\n                  )}\n                  {data.snap.support.faq && (\n                    <ExternalLink href={data.snap.support.faq}>\n                      <Trans>FAQ</Trans>\n                    </ExternalLink>\n                  )}\n                  {data.snap.support.knowledgeBase && (\n                    <ExternalLink href={data.snap.support.knowledgeBase}>\n                      <Trans>Knowledge Base</Trans>\n                    </ExternalLink>\n                  )}\n                </>\n              }\n            />\n          )}\n        </Flex>\n        <Divider my=\"6\" />\n        <Text color=\"gray.muted\" fontFamily=\"custom\" textTransform=\"uppercase\">\n          <Trans>\n            Description by{' '}\n            <Text\n              as=\"span\"\n              color=\"black\"\n              fontFamily=\"custom\"\n              textTransform=\"uppercase\"\n            >\n              {name}\n            </Text>\n          </Trans>\n        </Text>\n        <Text mt=\"1\">{description}</Text>\n      </Box>\n    </Container>\n  );\n};\n\ntype HeadProps = SnapPageProps & {\n  data: {\n    site: {\n      siteMetadata: Fields<\n        Queries.SiteSiteMetadata,\n        'title' | 'description' | 'author' | 'siteUrl'\n      >;\n    };\n  };\n};\n\nexport const Head: FunctionComponent<HeadProps> = ({ data }) => {\n  const title = `${data.snap.name} - ${data.site.siteMetadata.title}`;\n  const description = `Discover and install ${data.snap.name} on the MetaMask Snaps Directory to enhance your web3 experience. Easily find and install useful Snaps to customize your MetaMask wallet.`;\n  const image = `${data.site.siteMetadata.siteUrl}${data.snap.banner.publicURL}`;\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={data.snap.name} />\n      <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"og:image\" content={image} />\n      <meta name=\"og:image:width\" content=\"1200\" />\n      <meta name=\"og:image:height\" content=\"630\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={data.site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </>\n  );\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    snap(id: { eq: $id }) {\n      name\n      snapId\n      icon\n      description\n      latestVersion\n      website\n      category\n      author {\n        name\n        website\n      }\n      sourceCode\n      audits {\n        auditor\n        report\n      }\n      banner {\n        publicURL\n      }\n      support {\n        contact\n        faq\n        knowledgeBase\n      }\n    }\n\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport default SnapPage;\n"],"names":["Divider","props","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","__css","rest","dividerStyles","vertical","height","horizontal","width","jsx","hr","border","cx","displayName","Head","_ref2","data","title","snap","name","site","siteMetadata","description","image","siteUrl","banner","publicURL","_jsxs","_Fragment","children","_jsx","lang","content","property","author","_ref","_data$snap$support","_data$snap$support2","_data$snap$support3","snapId","icon","latestVersion","Container","maxWidth","paddingTop","marginTop","base","md","BackButton","Box","p","rounded","boxShadow","background","Flex","justifyContent","flexDirection","alignItems","SnapAuthorship","website","Button","variant","leftIcon","Icon","marginBottom","marginRight","Link","href","isExternal","_hover","textDecoration","Trans","id","InstallSnapButton","version","my","rowGap","category","SnapData","label","i18n","_","value","SnapCategory","ExternalLink","sourceCode","SnapSourceCode","url","audits","SnapAudits","support","contact","faq","knowledgeBase","Text","color","fontFamily","textTransform","values","components","as","mt"],"sourceRoot":""}