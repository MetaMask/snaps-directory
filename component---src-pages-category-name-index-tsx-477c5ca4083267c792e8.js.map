{"version":3,"file":"component---src-pages-category-name-index-tsx-477c5ca4083267c792e8.js","mappings":"+OAsBA,MAAMA,EAAyCC,IAA2B,IAA1B,KAAEC,EAAI,YAAEC,GAAaF,EACnE,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAERC,EAAWJ,EAAKI,SAASC,MACzB,KAAEA,EAAI,YAAEC,GAAgBC,EAAAA,GAAqBH,GAE7CI,EAAWN,EAAEG,GACbI,EAAkBP,EAAEI,GACpBI,EAAQR,EAACS,EAAAA,GAAAT,EAAC,CAAAU,GAAA,SAAAC,OAAA,CAAAL,SAAIA,MACdM,EAAUZ,EAACS,EAAAA,GAAAT,EAAC,CAAAU,GAAA,SAAAC,OAAA,CAAAL,SAAIA,MAEtB,OACEO,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,OAAQhB,EAAYgB,OACpBP,MAAOA,EACPI,QAASA,EACTR,YAAaG,EACbS,OAAQlB,EAAKI,SAASc,OAAOC,WAC7B,EAyCN,UA1BmDC,IAA2B,IAA1B,KAAEpB,EAAI,YAAEC,GAAamB,EACvE,MAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,KACRF,GAASG,EAAAA,EAAAA,IAAYxB,EAAKI,SAASC,QAKnCoB,EAAAA,EAAAA,UAAS,WAAY,CAAEC,SAAS,GAAO,GACtC,CAAC1B,EAAKI,SAASC,KAAMgB,KAEjBN,EAAAA,EAAAA,KAACjB,EAAI,CAACE,KAAMA,EAAMC,YAAaA,GAAe,C","sources":["webpack://@metamask/snaps-directory/./src/pages/{Category.name}/index.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql, navigate } from 'gatsby';\nimport type { FunctionComponent } from 'react';\nimport { useEffect } from 'react';\n\nimport { SEO } from '../../components';\nimport type { RegistrySnapCategory } from '../../constants';\nimport { SNAP_CATEGORY_LABELS } from '../../constants';\nimport { setCategory } from '../../features';\nimport { useDispatch } from '../../hooks';\nimport type { Fields } from '../../utils';\n\nexport type CategoryProps = {\n  pageContext: {\n    locale: string;\n  };\n  data: {\n    category: Fields<Queries.Category, 'name' | 'banner'>;\n  };\n};\n\nconst Head: FunctionComponent<CategoryProps> = ({ data, pageContext }) => {\n  const { _ } = useLingui();\n\n  const category = data.category.name as RegistrySnapCategory;\n  const { name, description } = SNAP_CATEGORY_LABELS[category];\n\n  const nameText = _(name);\n  const descriptionText = _(description);\n  const title = _(t`${nameText} Snaps on the MetaMask Snaps Directory`);\n  const ogTitle = _(t`${nameText} Snaps`);\n\n  return (\n    <SEO\n      locale={pageContext.locale}\n      title={title}\n      ogTitle={ogTitle}\n      description={descriptionText}\n      banner={data.category.banner.publicURL}\n    />\n  );\n};\n\n/**\n * This page is used to redirect to the main page, while setting the category\n * filter to the current category.\n *\n * This page is reachable at `/{category}`.\n *\n * @param props - The component props.\n * @param props.data - The page data.\n * @param props.pageContext - The page context.\n * @returns The rendered component.\n */\nconst Category: FunctionComponent<CategoryProps> = ({ data, pageContext }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCategory(data.category.name as RegistrySnapCategory));\n\n    // According to the type definition, `navigate` returns a promise, but in\n    // practice it does not.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    navigate('/explore', { replace: true });\n  }, [data.category.name, dispatch]);\n\n  return <Head data={data} pageContext={pageContext} />;\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    category(id: { eq: $id }) {\n      name\n      banner {\n        publicURL\n      }\n    }\n  }\n`;\n\nexport default Category;\n"],"names":["Head","_ref","data","pageContext","_","useLingui","category","name","description","SNAP_CATEGORY_LABELS","nameText","descriptionText","title","i18n","id","values","ogTitle","_jsx","SEO","locale","banner","publicURL","_ref2","dispatch","useDispatch","useEffect","setCategory","navigate","replace"],"sourceRoot":""}