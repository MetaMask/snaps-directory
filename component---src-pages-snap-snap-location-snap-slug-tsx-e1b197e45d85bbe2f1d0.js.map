{"version":3,"file":"component---src-pages-snap-snap-location-snap-slug-tsx-e1b197e45d85bbe2f1d0.js","mappings":"4QAKIA,EAAgBC,IAA0B,IAAAC,KAC5C,IAAOC,IACP,CACEC,UAAW,2BACRH,EACHI,MAAO,IACFJ,EAAa,MAChBK,YAAa,EACbC,UAAW,UACXC,YAAa,UACbC,MAAO,OACPC,OAAQ,UAIdV,EAAaW,YAAc,e,2CCmC3B,MAAMC,EAAyCC,IAA2B,IAA1B,KAAEC,EAAI,YAAEC,GAAaF,EACnE,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAERC,EAAQF,EAACG,EAAAA,GAAAH,EAAC,CAAAI,GAAA,SAAAC,OAAA,GAAIP,EAAKQ,KAAKC,SACxBC,EAAUV,EAAKQ,KAAKC,KACpBE,EAAkBT,EAACG,EAAAA,GAAAH,EACvB,CAAAI,GAAA,SAAAC,OAAA,GAAwCP,EAAKQ,KAAKC,SAGpD,OACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,OAAQb,EAAYa,OACpBV,MAAOA,EACPM,QAASA,EACTK,YAAaJ,EACbK,OAAQhB,EAAKQ,KAAKQ,OAAOC,WACzB,EAwIN,MApImDC,IAA2B,IAA1B,KAAElB,EAAI,YAAEC,GAAaiB,EACvE,MAAM,KACJT,EAAI,OACJU,EAAM,KACNC,EAAI,QACJC,EAAO,QACPC,EAAO,YACPP,EAAW,cACXQ,EAAa,SACbC,EAAQ,YACRC,GACEzB,EAAKQ,MAEDR,KAAM0B,IAAmBC,EAAAA,EAAAA,MAC3BC,EAAcC,QAAQH,aAAc,EAAdA,EAAiBP,IAE7C,OACEW,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,SAAS,WAAUC,SAAA,EACtBrB,EAAAA,EAAAA,KAACd,EAAI,CAACE,KAAMA,EAAMC,YAAaA,KAC/BW,EAAAA,EAAAA,KAACmB,EAAAA,GAAG,CACFG,cAAc,OACdF,SAAS,WACTG,IAAI,OACJxC,MAAM,OACNC,OAAO,MACPwC,GAAI,CACFC,WAAY,QAAQjB,EAAI,6BACxBkB,eAAgB,QAChBC,OAAQ,2BACRC,QAAS,WAGbV,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAACC,SAAS,eAAeC,WAAW,IAAIC,UAAU,KAAIX,SAAA,EAC9DrB,EAAAA,EAAAA,KAACiC,EAAAA,GAAwB,CAAC1B,OAAQA,EAAQ2B,QAASvB,KACnDO,EAAAA,EAAAA,MAACiB,EAAAA,EAAI,CACHC,cAAe,CAAC,SAAU,KAAM,OAChCC,eAAe,gBACfC,WAAW,SACXC,IAAI,IAAGlB,SAAA,EAEPrB,EAAAA,EAAAA,KAACwC,EAAAA,GAAU,CAAC3C,KAAMA,EAAMW,KAAMA,EAAMD,OAAQA,KAC5CW,EAAAA,EAAAA,MAACiB,EAAAA,EAAI,CAACG,WAAW,SAASC,IAAI,IAAIxD,MAAO,CAAC,OAAQ,KAAM,QAAQsC,SAAA,EAC5DX,IACAV,EAAAA,EAAAA,KAACyC,EAAAA,GAAiB,CAChBlC,OAAQA,EACRV,KAAMA,EACNW,KAAMA,EACNC,QAASA,EACTyB,QAASvB,KAGXK,GAAeN,IAAYD,IAC3BT,EAAAA,EAAAA,KAAC0C,EAAAA,GAAiB,CAACnC,OAAQA,EAAQE,QAASA,WAKlDT,EAAAA,EAAAA,KAAC2C,EAAAA,EAAO,CAACC,QAAQ,OACjB5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAQ,CAACjD,KAAMR,EAAKQ,QACrBI,EAAAA,EAAAA,KAAC2C,EAAAA,EAAO,CAACX,UAAU,IAAIc,aAAa,QAEpC5B,EAAAA,EAAAA,MAAC6B,EAAAA,EAAK,CACJC,UAAW,CAAC,SAAU,KAAM,KAAM,OAClCC,SAASjD,EAAAA,EAAAA,KAAC1B,EAAY,IACtB0D,UAAU,IACVc,aAAa,KACbI,QAAQ,IAAG7B,SAAA,EAEXrB,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CAACtD,KAAMA,EAAMM,YAAaA,KACtCH,EAAAA,EAAAA,KAACoD,EAAAA,GAAW,CAACxD,KAAMR,EAAKQ,KAAMiB,YAAaA,OAK5CD,GAAYA,IAAayC,EAAAA,GAAqBC,oBAC7CpC,EAAAA,EAAAA,MAAAqC,EAAAA,SAAA,CAAAlC,SAAA,EACErB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAO,CAACa,GAAG,QACZxD,EAAAA,EAAAA,KAACyD,EAAAA,GAAY,CACXlD,OAAQA,EACRK,SAAUA,YAKd,C,uHCpJN+B,GAAU,QAAW,SAAkBpE,EAAOmF,GAChD,MAAM,gBACJC,EAAe,kBACfC,EAAiB,eACjBC,EAAc,iBACdC,EAAgB,YAChBlF,EAAW,YACXmF,EAAW,YACXjF,KACGkF,IACD,QAAe,UAAWzF,IACxB,UACJG,EAAS,YACTuF,EAAc,aAAY,MAC1BtF,KACGuF,IACD,QAAiB3F,GACf4F,EAAgB,CACpBC,SAAU,CACRT,gBAAiBA,GAAmBG,GAAoBlF,GAAe,MACvEI,OAAQ,QAEVqF,WAAY,CACVT,kBAAmBA,GAAqBC,GAAkBjF,GAAe,MACzEG,MAAO,SAGX,OAAuB,IAAAP,KACrB,IAAO8F,GACP,CACEZ,MACA,mBAAoBO,KACjBC,EACHvF,MAAO,IACFqF,EACHO,OAAQ,IACRzF,cACAiF,iBACGI,EAAcF,MACdtF,GAELD,WAAW,IAAA8F,IAAG,iBAAkB9F,IAGtC,IACAiE,EAAQ1D,YAAc,S","sources":["webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-KTD65HY5.mjs","webpack://@metamask/snaps-directory/./src/pages/snap/{Snap.location}/{Snap.slug}.tsx","webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs"],"sourcesContent":["'use client'\n\n// src/stack/stack-divider.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackDivider = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__divider\",\n    ...props,\n    __css: {\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    }\n  }\n);\nStackDivider.displayName = \"StackDivider\";\n\nexport {\n  StackDivider\n};\n//# sourceMappingURL=chunk-KTD65HY5.mjs.map","import {\n  Box,\n  Container,\n  Divider,\n  Flex,\n  Stack,\n  StackDivider,\n} from '@chakra-ui/react';\nimport { t } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql } from 'gatsby';\nimport type { FunctionComponent } from 'react';\n\nimport { InstallSnapButton, SEO, SnapWebsiteButton } from '../../../components';\nimport { RegistrySnapCategory } from '../../../constants';\nimport {\n  useGetInstalledSnapsQuery,\n  Authorship,\n  RelatedSnaps,\n  Metadata,\n  NotificationAcknowledger,\n  Permissions,\n  Description,\n} from '../../../features';\nimport type { Fields } from '../../../utils';\n\ntype SnapPageProps = {\n  pageContext: {\n    locale: string;\n  };\n  data: {\n    snap: Fields<\n      Queries.Snap,\n      | 'name'\n      | 'icon'\n      | 'snapId'\n      | 'description'\n      | 'latestVersion'\n      | 'website'\n      | 'onboard'\n      | 'category'\n      | 'author'\n      | 'sourceCode'\n      | 'additionalSourceCode'\n      | 'audits'\n      | 'banner'\n      | 'support'\n      | 'permissions'\n      | 'privateCode'\n      | 'privacyPolicy'\n      | 'termsOfUse'\n    >;\n  };\n};\n\nconst Head: FunctionComponent<SnapPageProps> = ({ data, pageContext }) => {\n  const { _ } = useLingui();\n\n  const title = _(t`${data.snap.name} on the MetaMask Snaps Directory`);\n  const ogTitle = data.snap.name;\n  const metaDescription = _(\n    t`Customize your web3 experience with ${data.snap.name}.`,\n  );\n\n  return (\n    <SEO\n      locale={pageContext.locale}\n      title={title}\n      ogTitle={ogTitle}\n      description={metaDescription}\n      banner={data.snap.banner.publicURL}\n    />\n  );\n};\n\nconst SnapPage: FunctionComponent<SnapPageProps> = ({ data, pageContext }) => {\n  const {\n    name,\n    snapId,\n    icon,\n    website,\n    onboard,\n    description,\n    latestVersion,\n    category,\n    permissions,\n  } = data.snap;\n\n  const { data: installedSnaps } = useGetInstalledSnapsQuery();\n  const isInstalled = Boolean(installedSnaps?.[snapId]);\n\n  return (\n    <Box position=\"relative\">\n      <Head data={data} pageContext={pageContext} />\n      <Box\n        pointerEvents=\"none\"\n        position=\"absolute\"\n        top=\"-50%\"\n        width=\"100%\"\n        height=\"75%\"\n        sx={{\n          background: `url(\"${icon}\") no-repeat center center`,\n          backgroundSize: 'cover',\n          filter: 'blur(96px) saturate(1.2)',\n          opacity: '0.25',\n        }}\n      />\n      <Container maxWidth=\"container.xl\" paddingTop=\"0\" marginTop=\"20\">\n        <NotificationAcknowledger snapId={snapId} version={latestVersion} />\n        <Flex\n          flexDirection={['column', null, 'row']}\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          gap=\"6\"\n        >\n          <Authorship name={name} icon={icon} snapId={snapId} />\n          <Flex alignItems=\"center\" gap=\"4\" width={['100%', null, 'auto']}>\n            {!onboard && (\n              <InstallSnapButton\n                snapId={snapId}\n                name={name}\n                icon={icon}\n                website={website}\n                version={latestVersion}\n              />\n            )}\n            {(isInstalled || onboard) && website && (\n              <SnapWebsiteButton snapId={snapId} website={website} />\n            )}\n          </Flex>\n        </Flex>\n\n        <Divider marginY=\"8\" />\n        <Metadata snap={data.snap} />\n        <Divider marginTop=\"8\" marginBottom=\"12\" />\n\n        <Stack\n          direction={['column', null, null, 'row']}\n          divider={<StackDivider />}\n          marginTop=\"2\"\n          marginBottom=\"12\"\n          spacing=\"8\"\n        >\n          <Description name={name} description={description} />\n          <Permissions snap={data.snap} permissions={permissions} />\n        </Stack>\n\n        {/* TODO: Enable account management category when there are more Snaps\n            in the registry. */}\n        {category && category !== RegistrySnapCategory.AccountManagement && (\n          <>\n            <Divider my=\"12\" />\n            <RelatedSnaps\n              snapId={snapId}\n              category={category as RegistrySnapCategory}\n            />\n          </>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    snap(id: { eq: $id }) {\n      name\n      snapId\n      icon\n      description {\n        description\n        trusted\n      }\n      latestVersion\n      website\n      onboard\n      category\n      author {\n        name\n        website\n      }\n      sourceCode\n      additionalSourceCode {\n        name\n        url\n      }\n      audits {\n        auditor\n        report\n      }\n      banner {\n        publicURL\n      }\n      support {\n        contact\n        faq\n        knowledgeBase\n        keyRecovery\n      }\n      permissions\n      privateCode\n      privacyPolicy\n      termsOfUse\n    }\n  }\n`;\n\nexport default SnapPage;\n","'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map"],"names":["StackDivider","props","jsx","div","className","__css","borderWidth","alignSelf","borderColor","width","height","displayName","Head","_ref","data","pageContext","_","useLingui","title","i18n","id","values","snap","name","ogTitle","metaDescription","_jsx","SEO","locale","description","banner","publicURL","_ref2","snapId","icon","website","onboard","latestVersion","category","permissions","installedSnaps","useGetInstalledSnapsQuery","isInstalled","Boolean","_jsxs","Box","position","children","pointerEvents","top","sx","background","backgroundSize","filter","opacity","Container","maxWidth","paddingTop","marginTop","NotificationAcknowledger","version","Flex","flexDirection","justifyContent","alignItems","gap","Authorship","InstallSnapButton","SnapWebsiteButton","Divider","marginY","Metadata","marginBottom","Stack","direction","divider","spacing","Description","Permissions","RegistrySnapCategory","AccountManagement","_Fragment","my","RelatedSnaps","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderStyle","styles","orientation","rest","dividerStyles","vertical","horizontal","hr","border","cx"],"sourceRoot":""}