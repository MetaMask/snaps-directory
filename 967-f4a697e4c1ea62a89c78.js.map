{"version":3,"file":"967-f4a697e4c1ea62a89c78.js","mappings":"yPAQIA,GAAO,QAAW,SAAeC,EAAOC,GAC1C,MAAM,cACJC,EAAa,IACbC,EAAG,OACHC,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACXC,KACGC,GACDb,EACEc,EAAS,CACbC,QAAS,OACTC,kBAAmBd,EACnBe,QAASd,EACTe,WAAYd,EACZe,cAAed,EACfe,gBAAiBT,EACjBU,WAAYf,EACZgB,QAASf,EACTgB,aAAcf,EACdgB,aAAcf,EACdgB,iBAAkBf,EAClBgB,oBAAqBd,GAEvB,OAAuB,IAAAe,KAAI,IAAOC,IAAK,CAAE3B,MAAK4B,MAAOf,KAAWD,GAClE,IACAd,EAAK+B,YAAc,O,kCC1BfC,GAAa,QACf,SAAqB/B,EAAOC,GAC1B,MAAM,QAAE+B,EAAO,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,EAAO,cAAEC,KAAkBvB,GAASb,EACnEqC,GAAQ,SACRzB,EAAkBwB,EAkB5B,SAAwBE,EAAOD,GAC7B,OAAO,QAAcC,GAAQC,IAC3B,MAAMC,GAAS,QAAS,QAASD,EAJf,iBADRE,EAKmCF,GAJhB,GAAGE,MAAQA,EAIzB,CAAsCJ,GALzD,IAAcI,EAMV,OAAiB,OAAVF,EAAiB,KAAO,2BAA2BC,UAAe,GAE7E,CAvB4CE,CAAeN,EAAeC,IAwBlDM,EAxB0EX,GAyBzF,QACLW,GACCJ,GAAoB,OAAVA,EAAiB,KAAO,UAAUA,wBAHjD,IAAwBI,EAvBpB,OAAuB,IAAAhB,KACrB5B,EACA,CACEE,MACAE,IAAKgC,EACL9B,UAAW4B,EACX7B,OAAQ8B,EACRtB,qBACGC,GAGT,IAEFkB,EAAWD,YAAc,a,cCrBlB,MAAMc,EAA+CC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OACpEE,EAAAA,EAAAA,KAAChB,EAAU,CAACC,QAAS,CAAC,EAAG,KAAM,EAAG,GAAIG,QAAS,EAAEa,SAC9CF,EAAMG,KAAKC,IACVH,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,IAAmBD,GAAbA,EAAKE,OAEX,EAGf,O","sources":["webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-2N6VWMFO.mjs","webpack://@metamask/snaps-directory/./src/components/SnapsGrid.tsx"],"sourcesContent":["'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-2N6VWMFO.mjs.map","import { SimpleGrid } from '@chakra-ui/react';\nimport type { FunctionComponent } from 'react';\n\nimport type { Snap } from './providers';\nimport { SnapCard } from './SnapCard';\n\nexport type SnapsGridProps = {\n  snaps: Snap[];\n};\n\nexport const SnapsGrid: FunctionComponent<SnapsGridProps> = ({ snaps }) => (\n  <SimpleGrid columns={[1, null, 2, 3]} spacing={4}>\n    {snaps.map((snap) => (\n      <SnapCard key={snap.id} {...snap} />\n    ))}\n  </SimpleGrid>\n);\n\nexport default SnapsGrid;\n"],"names":["Grid","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","width","value","_value","n","widthToColumns","count","SnapsGrid","_ref","snaps","_jsx","children","map","snap","SnapCard","id"],"sourceRoot":""}