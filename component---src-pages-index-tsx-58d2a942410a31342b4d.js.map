{"version":3,"file":"component---src-pages-index-tsx-58d2a942410a31342b4d.js","mappings":"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","sources":["webpack://@metamask/snaps-directory/./src/pages/index.tsx","webpack://@metamask/snaps-directory/./src/assets/images/seo/home.png","webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs"],"sourcesContent":["import { Container, Divider, Flex, Heading, Link } from '@chakra-ui/react';\nimport { defineMessage } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql, Link as GatsbyLink, withPrefix } from 'gatsby';\nimport { useEffect, type FunctionComponent, Fragment } from 'react';\n\nimport banner from '../assets/images/seo/home.png';\nimport { RegistrySnapCategory, SNAP_CATEGORY_LINKS } from '../constants';\nimport { Banner, FilteredSnaps, resetFilters } from '../features';\nimport { Order } from '../features/filter/constants';\nimport { useDispatch } from '../hooks';\nimport type { Fields } from '../utils';\n\nconst GROUPS = [\n  {\n    header: defineMessage`Most Popular`,\n    limit: 3,\n    link: '/explore',\n    linkText: defineMessage`Explore All Snaps`,\n    images: true,\n  },\n  {\n    header: SNAP_CATEGORY_LINKS[RegistrySnapCategory.AccountManagement].header,\n    category: RegistrySnapCategory.AccountManagement,\n    limit: 3,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.AccountManagement].link,\n    linkText:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.AccountManagement].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].header,\n    category: RegistrySnapCategory.Interoperability,\n    limit: 6,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].link,\n    linkText:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].header,\n    category: RegistrySnapCategory.TransactionInsights,\n    limit: 6,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].link,\n    linkText:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].header,\n    category: RegistrySnapCategory.Notifications,\n    limit: 3,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].link,\n    linkText: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header: defineMessage`Latest`,\n    limit: 3,\n    link: '/latest',\n    linkText: defineMessage`See Latest`,\n    order: Order.Latest,\n  },\n];\n\nexport type IndexPageProps = {\n  data: {\n    allSnap: {\n      nodes: Fields<Queries.Snap, 'snapId' | 'icon'>[];\n    };\n  };\n};\n\nconst IndexPage: FunctionComponent<IndexPageProps> = ({ data }) => {\n  const i18n = useLingui();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetFilters());\n  }, [dispatch]);\n\n  return (\n    <Container\n      maxWidth=\"container.xl\"\n      paddingTop=\"0\"\n      marginTop=\"4\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Banner snaps={data.allSnap.nodes} />\n      <Divider my=\"8\" />\n\n      {GROUPS.map(\n        ({ header, limit, category, link, linkText, order, images }, index) => (\n          <Fragment key={`group-${index}`}>\n            <Flex\n              width=\"100%\"\n              marginBottom=\"8\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Heading as=\"h2\" fontSize=\"2xl\">\n                {i18n._(header)}\n              </Heading>\n              <Link as={GatsbyLink} to={link} variant=\"landing\" flexShrink=\"0\">\n                {i18n._(linkText)}\n              </Link>\n            </Flex>\n            <FilteredSnaps\n              limit={limit}\n              category={category}\n              order={order}\n              images={images}\n            />\n\n            {index !== GROUPS.length - 1 && <Divider mt=\"12\" mb=\"8\" />}\n          </Fragment>\n        ),\n      )}\n    </Container>\n  );\n};\n\ntype HeadProps = {\n  data: {\n    site: {\n      siteMetadata: Fields<\n        Queries.SiteSiteMetadata,\n        'title' | 'description' | 'author' | 'siteUrl'\n      >;\n    };\n  };\n};\n\nexport const Head: FunctionComponent<HeadProps> = ({ data }) => {\n  const image = `${data.site.siteMetadata.siteUrl}${withPrefix(banner)}`;\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>{data.site.siteMetadata.title}</title>\n      <meta name=\"description\" content={data.site.siteMetadata.description} />\n      <meta property=\"og:title\" content={data.site.siteMetadata.title} />\n      <meta\n        property=\"og:description\"\n        content={data.site.siteMetadata.description}\n      />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"og:image\" content={image} />\n      <meta name=\"og:image:width\" content=\"1200\" />\n      <meta name=\"og:image:height\" content=\"630\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={data.site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={data.site.siteMetadata.title} />\n      <meta\n        name=\"twitter:description\"\n        content={data.site.siteMetadata.description}\n      />\n      <meta name=\"twitter:image\" content={image} />\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n\n    allSnap {\n      nodes {\n        snapId\n        icon\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","export default __webpack_public_path__ + \"static/home-3da7273f125d0f7c0add3b849d33e152.png\";","'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map"],"names":["GROUPS","header","id","limit","link","linkText","images","SNAP_CATEGORY_LINKS","RegistrySnapCategory","AccountManagement","category","order","Order","DeterministicRandom","Interoperability","TransactionInsights","Notifications","Latest","Head","_ref3","data","image","site","siteMetadata","siteUrl","withPrefix","banner","_jsxs","_Fragment","children","_jsx","lang","title","name","content","description","property","author","_ref","i18n","useLingui","dispatch","useDispatch","useEffect","resetFilters","Container","maxWidth","paddingTop","marginTop","display","flexDirection","Banner","snaps","allSnap","nodes","Divider","my","map","_ref2","index","Fragment","Flex","width","marginBottom","justifyContent","alignItems","Heading","as","fontSize","_","Link","GatsbyLink","to","variant","flexShrink","FilteredSnaps","length","mt","mb","props","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","__css","rest","dividerStyles","vertical","height","horizontal","jsx","hr","border","cx","displayName"],"sourceRoot":""}